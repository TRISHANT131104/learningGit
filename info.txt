git init -> initiallises repo
git add filename -> adds a file to stagging area
git add -A -> adds all files in the repo to stagging area
git commit --> takes a snapshot of that particular instance of a repo

UNTRACKED           UNMODIFIED           MODIFIED            STAGED
    -------------------(adding a file)--------------------------> 
                         ----(edit a file)--->
                                            --(stage the file)-->
                         <----------(commit)---------------------

git commit directly doesn't work since it needs a message to go with it hence the command is (git commit -m "YOUR MESSAGE")
git status -> to check status of repo
git checkout filename-> to change the file into the previous commited instance if anything goes wrong
ls -lart -> shows all the hidden items in the repo
git checkout -f -> to change all the files like in the previous commit
git log -> gives your identity and also gives all the commits done by you
git log -p -NUMBER  -> gives you last "NUMBER" of commits done by you
git diff -> compares your present directory with stagged area
git diff --stagged -> compares yours staging area with your last commit
git commit -a -m -> skips staging area it directly adds and commits the file at the same time, usually not recommended when doing group projects
touch filename -> adds a file with that filename in the repo
git rm -> deletes file the file from both staging area and working repo
git rm --cached -> removes file from stagged area but still keeps it in ur working repo


touch gitignore -> create a git ignore file in which whatever file name you write is ignored by git
if you want to ignore a specific file with that name and nothing else you can add the relative path of the file wrt gitignore
if you want to ignore all files with a particular extension then use star before that extenstion (eg: *.html)


git branch BRANCHNAME -> add a new branch with that BRANCHNAME
git checkout BRANCHNAME -> takes you to that branch
git merge BRANCHNAME -> merges your BRANCHNAME branch to your current branch
git checkout -b BRANCHNAME -> creates a branch aswell as takes you to that branch

git remote add origin https..... -> connects or adds a remote repository to git
git remote -> lists all the remote repositories
git remote -v -> lists all the remote repositories with their paths
git push origin master 
git remote set-url origin -> changes the url of the remote repository
git push -u origin BRANCHNAME -> adds the branch to the remote repo

